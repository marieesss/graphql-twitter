// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String      @id @unique @default(uuid())
  username  String      @unique
  password  String
  email     String      @unique
  name      String
  surname   String
  bio       String?
  Post      Post[]
  Comment   Comment[]
  Like      Like[]
  Followers Followers[] @relation(name: "FollowerRelation")
  Following Followers[] @relation(name: "FollowingRelation")
}

model Post {
  id          String    @id @unique @default(uuid())
  text        String
  userId      String
  image       String?
  date_create DateTime  @default(now())
  date_update DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Comment     Comment[]
  Like        Like[]
}

model Comment {
  id          String   @id @unique @default(uuid())
  userId      String
  postId      String
  text        String
  date_create DateTime @default(now())
  date_update DateTime @updatedAt
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Like        Like[]
}

model Like {
  id          String   @id @unique @default(uuid())
  userId      String
  postId      String?
  commentId   String?
  date_create DateTime @default(now())
  comment     Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  post        Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Followers {
  id          String @id @unique @default(uuid())
  followerId  String
  followingId String

  follower  User @relation(name: "FollowerRelation", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation(name: "FollowingRelation", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
}
